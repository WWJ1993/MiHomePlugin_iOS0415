{"version":3,"sources":["../../src/data/duckTypeUniformValue.js"],"names":[],"mappings":";;;;AAAA,IAAM,QAAQ,QAAQ,OAAR,CAAR;AACN,IAAM,aAAa,QAAQ,eAAR,CAAb;;;;AAIN,SAAS,oBAAT,CAA+B,GAA/B,EAAoC;AAClC,MAAI,aAAa,gDAAb,CAD8B;;AAGlC,MAAI,QAAM,QAAN,EAAgB;AAClB,QAAG,MAAM,GAAN,KAAc,CAAC,SAAS,GAAT,CAAD,EAAgB,MAAM,IAAI,KAAJ,CAAU,sBAAoB,GAApB,GAAwB,GAAxB,CAAhB,CAAjC;AACA,WAAO,GAAP,CAFkB;GAApB;;AAKA,MAAI,QAAM,SAAN,EAAiB;AACnB,WAAO,GAAP,CADmB;GAArB;;AAIA,MAAI,QAAM,QAAN,EAAgB;AAClB,WAAO,GAAP,CADkB;GAApB;;AAIA,MAAI,QAAM,WAAN,EAAmB;AACrB,WAAO,IAAP,CADqB;GAAvB;;AAIA,MAAI,QAAQ,QAAR,EAAkB;;AAEpB,QAAI,CAAC,GAAD,EAAM;AACR,aAAO,IAAP,CADQ;KAAV;;AAIA,QAAI,OAAO,IAAI,GAAJ,KAAY,QAAnB,EAA6B;AAC/B,aAAO,OAAP,CAD+B;KAAjC;;AAIA,QAAI,IAAI,IAAJ,IAAY,IAAI,KAAJ,IAAa,IAAI,MAAJ,EAAY;AACvC,aAAO,SAAP,CADuC;KAAzC;;AAIA,QAAI,eAAe,KAAf,EAAsB;AACxB,UAAM,SAAS,IAAI,MAAJ,CADS;AAExB,UAAI,CAAC,MAAD,EAAS,MAAM,IAAI,KAAJ,CAAU,gBAAV,CAAN,CAAb;AACA,UAAI,gBAAgB,KAAhB,CAHoB;AAIxB,UAAI,YAAY,KAAZ,CAJoB;AAKxB,UAAI,cAAc,KAAd,CALoB;AAMxB,UAAI,eAAe,KAAf,CANoB;AAOxB,WAAK,IAAI,IAAE,CAAF,EAAK,IAAE,MAAF,EAAU,GAAxB,EAA6B;AAC3B,YAAM,MAAM,IAAI,CAAJ,CAAN,CADqB;AAE3B,YAAM,WAAW,gDAAX,CAFqB;AAG3B,gBAAQ,CAAR;AACA,eAAK,QAAL;AACE,gBAAI,OAAO,WAAW,GAAX,CAAP,EACF,gBAAgB,IAAhB,CADF,KAEK,IAAI,OAAO,MAAM,cAAN,CAAqB,GAArB,CAAP,EACP,YAAY,IAAZ,CADG,KAEA,IAAI,eAAe,KAAf,EACP,OAAO,qBAAqB,GAArB,CAAP,CADG,KAGH,MAAM,IAAI,KAAJ,CAAU,cAAY,CAAZ,GAAc,0BAAd,GAAyC,GAAzC,GAA6C,GAA7C,CAAhB,CAHG;AAIL,kBATF;;AADA,eAYK,QAAL;AACE,gBAAG,MAAM,GAAN,KAAc,CAAC,SAAS,GAAT,CAAD,EACf,MAAM,IAAI,KAAJ,CAAU,cAAY,CAAZ,GAAc,qBAAd,GAAoC,GAApC,GAAwC,GAAxC,CAAhB,CADF;AAEA,0BAAc,IAAd,CAHF;AAIE,kBAJF;;AAZA,eAkBK,SAAL;AACE,2BAAe,IAAf,CADF;AAEE,kBAFF;;AAlBA;AAuBE,kBAAM,IAAI,KAAJ,CAAU,cAAY,CAAZ,GAAc,yBAAd,GAAwC,GAAxC,CAAhB,CADF;AAtBA,SAH2B;OAA7B;;AA8BA,UAAM,iCAAiC,eAAe,YAAf,IAA+B,aAA/B,CArCf;AAsCxB,UAAI,kCAAkC,SAAlC,EAA6C;AAC/C,cAAM,IAAI,KAAJ,CAAU,oEAAV,CAAN,CAD+C;OAAjD;;AAIA,UAAI,SAAJ,EAAe;AACb,eAAO,QAAP,CADa;OAAf;AAGA,UAAI,aAAJ,EAAmB;AACjB,eAAO,YAAP,CADiB;OAAnB;AAGA,UAAI,WAAJ,EAAiB;AACf,eAAO,UAAP,CADe;OAAjB;AAGA,UAAI,YAAJ,EAAkB;AAChB,eAAO,WAAP,CADgB;OAAlB;KAnDF;;AAwDA,QAAI,WAAW,GAAX,CAAJ,EAAqB;AACnB,aAAO,UAAP,CADmB;KAArB;;AAIA,QAAI,MAAM,cAAN,CAAqB,GAArB,CAAJ,EAA+B;AAC7B,aAAO,MAAP,CAD6B;KAA/B;GA1EF;;AA+EA,QAAM,IAAI,KAAJ,CAAU,0BAAwB,GAAxB,CAAhB,CAnGkC;CAApC;;AAsGA,OAAO,OAAP,GAAiB,oBAAjB","file":"duckTypeUniformValue.js","sourcesContent":["const React = require(\"react\");\nconst isAnimated = require(\"../isAnimated\");\n\n// infer the uniform value type and validate it (throw error if invalid)\n\nfunction duckTypeUniformValue (obj) {\n  let typ = typeof obj;\n\n  if (typ===\"number\") {\n    if(isNaN(obj) || !isFinite(obj)) throw new Error(\"invalid number: '\"+obj+\"'\");\n    return typ;\n  }\n\n  if (typ===\"boolean\") {\n    return typ;\n  }\n\n  if (typ===\"string\") {\n    return typ;\n  }\n\n  if (typ===\"undefined\") {\n    return null;\n  }\n\n  if (typ === \"object\") {\n\n    if (!obj) {\n      return null;\n    }\n\n    if (typeof obj.uri === \"string\") {\n      return \"{uri}\";\n    }\n\n    if (obj.data && obj.shape && obj.stride) {\n      return \"ndarray\";\n    }\n\n    if (obj instanceof Array) {\n      const length = obj.length;\n      if (!length) throw new Error(\"array is empty\");\n      let foundAnimated = false;\n      let foundVDOM = false;\n      let foundNumber = false;\n      let foundBoolean = false;\n      for (let i=0; i<length; i++) {\n        const val = obj[i];\n        const t = typeof val;\n        switch (t) {\n        case \"object\":\n          if (val && isAnimated(val))\n            foundAnimated = true;\n          else if (val && React.isValidElement(val))\n            foundVDOM = true;\n          else if (val instanceof Array)\n            return duckTypeUniformValue(val);\n          else\n            throw new Error(\"at index \"+i+\", Unrecognized object: '\"+val+\"'\");\n          break;\n\n        case \"number\":\n          if(isNaN(val) || !isFinite(val))\n            throw new Error(\"at index \"+i+\", invalid number: '\"+val+\"'\");\n          foundNumber = true;\n          break;\n\n        case \"boolean\":\n          foundBoolean = true;\n          break;\n\n        default:\n          throw new Error(\"at index \"+i+\", Unrecognized object: \"+val);\n        }\n      }\n\n      const foundNumberOrBooleanOrAnimated = foundNumber || foundBoolean || foundAnimated;\n      if (foundNumberOrBooleanOrAnimated && foundVDOM) {\n        throw new Error(\"Invalid array. Found both VDOM value and numbers/booleans/animated\");\n      }\n\n      if (foundVDOM) {\n        return \"vdom[]\";\n      }\n      if (foundAnimated) {\n        return \"animated[]\";\n      }\n      if (foundNumber) {\n        return \"number[]\";\n      }\n      if (foundBoolean) {\n        return \"boolean[]\";\n      }\n    }\n\n    if (isAnimated(obj)) {\n      return \"animated\";\n    }\n\n    if (React.isValidElement(obj)) {\n      return \"vdom\";\n    }\n  }\n\n  throw new Error(\"Unrecognized object: \"+obj);\n}\n\nmodule.exports = duckTypeUniformValue;\n"]}