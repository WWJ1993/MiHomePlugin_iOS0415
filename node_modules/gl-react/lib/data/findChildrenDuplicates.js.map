{"version":3,"sources":["../../src/data/findChildrenDuplicates.js"],"names":[],"mappings":";;;;AAGA,SAAS,sBAAT,CAAiC,IAAjC,EAAuC,QAAvC,EAAiD;AAC/C,MAAI,kBAAkB,EAAlB,CAD2C;AAE/C,MAAI,sBAAsB,EAAtB,CAF2C;AAG/C,OAAK,QAAL,CAAc,GAAd,CAAkB,iBAAS;AACzB,sBAAkB,gBAAgB,MAAhB,CAAuB,MAAM,eAAN,CAAzC,CADyB;AAEzB,0BAAsB,oBAAoB,MAApB,CAA2B,MAAM,mBAAN,CAAjD,CAFyB;GAAT,CAAlB,CAH+C;AAO/C,SAAO,gBAAgB,GAAhB,CAAoB,UAAC,IAAD,EAAO,QAAP,EAAoB;AAC7C,QAAI,SAAS,OAAT,CAAiB,IAAjB,MAA2B,CAAC,CAAD,EAAI,OAAnC;AACA,QAAI,MAAM,CAAN,CAFyC;AAG7C,SAAK,IAAI,IAAE,CAAF,EAAK,IAAE,KAAK,QAAL,CAAc,MAAd,EAAsB,GAAtC,EAA2C;AACzC,UAAI,KAAK,QAAL,CAAc,CAAd,EAAiB,eAAjB,CAAiC,OAAjC,CAAyC,IAAzC,MAAmD,CAAC,CAAD,EAAI;AACzD,cADyD;AAEzD,YAAI,MAAM,CAAN,EAAS,OAAO;AAClB,gBAAM,oBAAoB,QAApB,CAAN;AACA,oBAFkB;SAAP,CAAb;OAFF;KADF;GAHyB,CAApB,CAYJ,MAZI,CAYG;WAAO;GAAP,CAZV,CAP+C;CAAjD;;AAsBA,OAAO,OAAP,GAAiB,sBAAjB","file":"findChildrenDuplicates.js","sourcesContent":["\n// recursively find shared VDOM across direct children.\n// if a VDOM is used in 2 different children, it means we can share its computation in contextChildren\nfunction findChildrenDuplicates (data, toIgnore) {\n  let descendantsVDOM = [];\n  let descendantsVDOMData = [];\n  data.children.map(child => {\n    descendantsVDOM = descendantsVDOM.concat(child.descendantsVDOM);\n    descendantsVDOMData = descendantsVDOMData.concat(child.descendantsVDOMData);\n  });\n  return descendantsVDOM.map((vdom, allIndex) => {\n    if (toIgnore.indexOf(vdom) !== -1) return;\n    let occ = 0;\n    for (let i=0; i<data.children.length; i++) {\n      if (data.children[i].descendantsVDOM.indexOf(vdom) !== -1) {\n        occ ++;\n        if (occ > 1) return {\n          data: descendantsVDOMData[allIndex],\n          vdom\n        };\n      }\n    }\n  }).filter(obj => obj);\n}\n\nmodule.exports = findChildrenDuplicates;\n"]}